install.packages('doParallel')
install.packages('gptk')
install.packages('outliers')
install.packages('XLConnect')
install.packages('RJSONIO')
install.packages('RCurl')
install.packages('Rmpfr')
harmonicMean <- function(logLikelihoods, precision=2000L) {
library("Rmpfr")
llMed <- median(logLikelihoods)
as.double(llMed - log(mean(exp(-mpfr(logLikelihoods,
prec = precision) + llMed))))
}
harmonicMean(c(122, 123))
install.packages('Rmpfr')
harmonicMean <- function(logLikelihoods, precision=2000L) {
library("Rmpfr")
llMed <- median(logLikelihoods)
as.double(llMed - log(mean(exp(-mpfr(logLikelihoods,
prec = precision) + llMed))))
}
harmonicMean(c(122, 123))
harmonicMean(c(-122, -123))
setwd("~/Human_Decomposition_Sequence_2015_06_15/scripts")
source('~/Human_Decomposition_Sequence_2015_06_15/scripts/XCMSprocess-cluster_to_peakml.R')
# Set the method you want to use for peak detection:
# - 1 is using Tony's script
# - 2 is using the modified Tony's script where we can specify the full scan data for MS1
# - 3 is using RMassBank's script
create_peak_method <- 3
# Check inside each sourced script for all the parameters etc.
if (create_peak_method == 1) {
source('runCreatePeakMethod1.R')
} else if (create_peak_method == 2) {
source('runCreatePeakMethod2.R')
} else if (create_peak_method == 3) {
source('runCreatePeakMethod3.R')
}
###############################
##### Feature Extractions #####
###############################
# do further filtering inside create_peaklist() method
source('createPeakList.R')
results <- create_peaklist(peaks)
ms1 <- results$ms1
ms2 <- results$ms2
# reuse prev vocabularies, if any .. for LDA.
# prev_words_file <- '/home/joewandy/git/metabolomics_tools/justin/notebooks/results/beer3_pos_rel/beer3pos.vocab'
prev_words_file <- ''
library(Runit)
library(RUnit)
setwd("~/git/metabolomics_tools/justin/R")
create_peak_method <- 2
source('runCreatePeakMethod2.R')
full_scan_file <- '/home/joewandy/Dropbox/Project/justin_data/Dataset_for_PiMP/Beers_4Beers_compared/Positive/Samples/Beer_3_full1.mzXML'
fragmentation_file <- '/home/joewandy/Project/justin_data/Beer_3_T10_POS.mzXML'
peaks <- run_create_peak_method_2(full_scan_file, fragmentation_file)
ms2
###############################
##### Feature Extractions #####
###############################
# do further filtering inside create_peaklist() method
source('createPeakList.R')
results <- create_peaklist(peaks)
ms1 <- results$ms1
ms2 <- results$ms2
# reuse prev vocabularies, if any .. for LDA.
# prev_words_file <- '/home/joewandy/git/metabolomics_tools/justin/notebooks/results/beer3_pos_rel/beer3pos.vocab'
prev_words_file <- ''
source('extractFragmentFeatures.R')
results <- extract_ms2_fragment_df(ms1, ms2, prev_words_file, grouping_tol=7)
fragment_df <- results$fragment_df
ms2 <- results$ms2
source('extractLossFeatures.R')
results <- extract_neutral_loss_df(ms1, ms2, prev_words_file,
grouping_tol=15, threshold_counts=5, threshold_max_loss=200)
neutral_loss_df <- results$neutral_loss_df
ms2 <- results$ms2
loss_values_df <- results$loss_values_df
# source('extractMzdiffFeatures.R')
# results <- extract_mzdiff_df(ms1, ms2)
# mz_diff_df <- results$mz_diff_df
# ms2 <- results$ms2
# post-processing: for losses<40, merge rows within 0.01 Dalton together
source('postProcessing.R')
results <- post_process_neutral_loss(neutral_loss_df, loss_values_df, ms2,
min_mass_to_include=40, max_diff=0.01)
neutral_loss_df <- results$neutral_loss_df
ms2 <- results$ms2
########################
##### Write Output #####
########################
# construct the output filenames
prefix <- basename(input_file) # get the filename only
prefix <- sub("^([^.]*).*", "\\1", prefix) # get rid of the extension
fragments_out <- paste(c(prefix, '_fragments.csv'), collapse="")
losses_out <- paste(c(prefix, '_losses.csv'), collapse="")
# mzdiffs_out <- paste(c(prefix, '_mzdiffs.csv'), collapse="")
ms1_out <- paste(c(prefix, '_ms1.csv'), collapse="")
ms2_out <- paste(c(prefix, '_ms2.csv'), collapse="")
input_file <- 'beer3pos'
# construct the output filenames
prefix <- basename(input_file) # get the filename only
prefix <- sub("^([^.]*).*", "\\1", prefix) # get rid of the extension
fragments_out <- paste(c(prefix, '_fragments.csv'), collapse="")
losses_out <- paste(c(prefix, '_losses.csv'), collapse="")
# mzdiffs_out <- paste(c(prefix, '_mzdiffs.csv'), collapse="")
ms1_out <- paste(c(prefix, '_ms1.csv'), collapse="")
ms2_out <- paste(c(prefix, '_ms2.csv'), collapse="")
# write stuff out
write.table(ms1, file=ms1_out, col.names=NA, row.names=T, sep=",")
write.table(ms2, file=ms2_out, col.names=NA, row.names=T, sep=",")
write.table(fragment_df, file=fragments_out, col.names=NA, row.names=T, sep=",")
write.table(neutral_loss_df, file=losses_out, col.names=NA, row.names=T, sep=",")
# write.table(mz_diff_df, file=mzdiffs_out, col.names=NA, row.names=T, sep=",")
setwd("~/git/metabolomics_tools/justin/new-R")
source('~/git/metabolomics_tools/justin/new-R/MS1MS2_MatrixGeneration.R')
full_scan_file <- config$input_files$full_scan_file
fragmentation_file <- config$input_files$fragmentation_file_m2
xset_full <- xcmsSet(files=full_scan_file, method=config$MS1_XCMS_peakpicking_settings$method, ppm=config$MS1_XCMS_peakpicking_settings$ppm, snthresh=config$MS1_XCMS_peakpicking_settings$snthres, peakwidth=c(config$MS1_XCMS_peakpicking_settings$peakwidth_from,config$MS1_XCMS_peakpicking_settings$peakwidth_to),
prefilter=c(config$MS1_XCMS_peakpicking_settings$prefilter_from,config$MS1_XCMS_peakpicking_settings$prefilter_to), mzdiff=config$MS1_XCMS_peakpicking_settings$mzdiff, integrate=config$MS1_XCMS_peakpicking_settings$integrate, fitgauss=config$MS1_XCMS_peakpicking_settings$fitgauss, verbose.column=config$MS1_XCMS_peakpicking_settings$verbose.column)
xset_full <- group(xset_full)
xset <- xcmsSet(files=fragmentation_file, method=config$MS1_XCMS_peakpicking_settings$method, ppm=config$MS1_XCMS_peakpicking_settings$ppm, snthresh=config$MS1_XCMS_peakpicking_settings$snthres, peakwidth=c(config$MS1_XCMS_peakpicking_settings$peakwidth_from,config$MS1_XCMS_peakpicking_settings$peakwidth_to),
prefilter=c(config$MS1_XCMS_peakpicking_settings$prefilter_from,config$MS1_XCMS_peakpicking_settings$prefilter_to), mzdiff=config$MS1_XCMS_peakpicking_settings$mzdiff, integrate=config$MS1_XCMS_peakpicking_settings$integrate, fitgauss=config$MS1_XCMS_peakpicking_settings$fitgauss, verbose.column=config$MS1_XCMS_peakpicking_settings$verbose.column)
xset <- group(xset)
source('xcmsSetFragments.modified.R')
frags <- xcmsSetFragments(xset, cdf.corrected = config$ms1_ms2_pairing_parameters$cdf.corrected, min.rel.int=config$filtering_parameters_MassSpectrometry_related$min.rel.int, max.frags = config$filtering_parameters_MassSpectrometry_related$mass.frags,
msnSelect=c(config$ms1_ms2_pairing_parameters$msnSelect), specFilter=c(config$ms1_ms2_pairing_parameters$specFilter), match.ppm=config$ms1_ms2_pairing_parameters$match.ppm,
sn=config$filtering_parameters_MassSpectrometry_related$sn, mzgap=config$filtering_parameters_MassSpectrometry_related$mz_gap, min.r=config$ms1_ms2_pairing_parameters$min.r, min.diff=config$ms1_ms2_pairing_parameters$min.diff)
# run modified Tony's script
source('xcmsSetFragments.modified.R')
frags <- xcmsSetFragments(xset, xset_full,
cdf.corrected=config$ms1_ms2_pairing_parameters$cdf.corrected,
min.rel.int=config$filtering_parameters_MassSpectrometry_related$min.rel.int,
max.frags=config$filtering_parameters_MassSpectrometry_related$mass.frags,
msnSelect=c(config$ms1_ms2_pairing_parameters$msnSelect),
specFilter=c(config$ms1_ms2_pairing_parameters$specFilter),
match.ppm=config$ms1_ms2_pairing_parameters$match.ppm,
sn=config$filtering_parameters_MassSpectrometry_related$sn,
mzgap=config$filtering_parameters_MassSpectrometry_related$mz_gap, min.r=config$ms1_ms2_pairing_parameters$min.r,
min.diff=config$ms1_ms2_pairing_parameters$min.diff)
peaks <- as.data.frame(frags@peaks)
# load yaml library to allow assignment of parameter settings
library(yaml)
config = yaml.load_file("config_MS1MS2matrixgeneration_parameters.yml")
create_peak_method <- 2
source('~/git/metabolomics_tools/justin/new-R/MS1MS2_MatrixGeneration.R')
library(yaml)
config = yaml.load_file("config_MS1MS2matrixgeneration_parameters.yml")
setwd("~/git/metabolomics_tools/multifile_lda/R")
source('~/git/metabolomics_tools/multifile_lda/R/MS1MS2_MatrixGeneration.R')
source('~/git/metabolomics_tools/multifile_lda/R/MS1MS2_MatrixGeneration.R')
setwd("~/git/metabolomics_tools/multifile_lda/R")
source('~/git/metabolomics_tools/multifile_lda/R/MS1MS2_MatrixGeneration.R')
